===============================================================================
Module : rob_testbench
===============================================================================
SCORE  LINE   TOGGLE 
100.00 100.00 100.00 

Source File(s) : 

/afs/umich.edu/user/s/h/shiyuliu/Desktop/group8w20/testbench/rob_testbench.sv

Module self-instances :

SCORE  LINE   TOGGLE NAME          
100.00 100.00 100.00 rob_testbench 



-------------------------------------------------------------------------------
Line Coverage for Module : rob_testbench

             Line No.   Total   Covered  Percent
TOTAL                      238      238   100.00
ROUTINE           121        4        4   100.00
ALWAYS            146        3        3   100.00
INITIAL           170      231      231   100.00

120                         
121        1/1              rob_print_input({31'h0, reset},
122                                         PC,
123                                         {31'h0, execution_finished},
124                                         {31'h0, dispatch_enable},
125                                         {27'h0, dest_areg_idx},
126                                         {{(32-`PRF_LEN){1'b0}},
127                                         prf_free_preg_idx},
128                                         {{(32-`ROB_LEN){1'b0}}, executed_rob_entry},
129                                         {31'h0, cdb_mis_pred});
130        1/1              rob_print_header({31'h0, commit_valid});
131        1/1              for (i = 0; i < `ROB_SIZE; i++) begin
132        1/1                  rob_print(i,
133                                       rob_packets[i].PC,
134                                       {31'h0, rob_packets[i].executed},
135                                       {{(32-`PRF_LEN){1'b0}}, rob_packets[i].dest_preg_idx},
136                                       {27'h0, rob_packets[i].dest_areg_idx},
137                                       {31'h0, rob_packets[i].rob_mis_pred},
138                                       {{(32-`ROB_LEN){1'b0}}, rob_head},
139                                       {{(32-`ROB_LEN){1'b0}}, rob_tail});
140                         end
141                     endtask
142                     
143                     // Set up the clock to tick, notice that this block inverts clock every 5 ticks,
144                     // so the actual period of the clock is 10, not 5.
145                     always begin
146        2/2              #5;
147        1/1              clock=~clock;
148                     end
149                     
150                     
151                     
152                     // Start the "real" testbench here. Initial is the beginning of simulated time.
153                     initial begin
154                     
155                         // Monitors can be really useful, but for larger testbenches, they can
156                         // dump a huge amount of text to the screen.
157                     
158                         // Conceptually a monitor is a "magic" printf that will print itself
159                         // any time one of the signals changes.
160                     
161                         // Try uncommenting this monitor once and running the testbench...
162                         //$monitor("Time:%4.0f clock:%b A:%h B:%h CIN:%b SUM:%h COUT:%b", $time, clock, A, B, C_IN, SUM, C_OUT);
163                     
164                         // Recall that verilog has an "unknown" state (x) which every signal
165                         // starts at. In practice, most internal registers will get set by a
166                         // reset signal and you will only need to specify testbench signals here
167                     
168                     
169                         //Test Suite 1
170        1/1              reset               = 1'b1;
171        1/1              PC                  = 32'h0;
172        1/1              dispatch_enable     = 1'b1;
173        1/1              execution_finished  = 1'b0;
174        1/1              dest_areg_idx       = 1'b1;
175        1/1              prf_free_preg_idx   = 1'b0;
176        1/1              executed_rob_entry  = `ROB_LEN'h0;
177        1/1              cdb_mis_pred        = 1'b0;
178                     
179                         // Don't forget to initialize the clock! Otherwise that always block
180                         // above will just keep inverting "x" to "x".
181        1/1              clock = 0;
182                     
183        1/1              $display("STARTING TESTSUITE 1!");
184                         // Here, we present a method to test every possible input
185        2/2              @(negedge clock);
186                         
187                         // Test 1
188        2/2              @(negedge clock); 
189        1/1              print_rob(rob_packets0,rob_head,rob_tail,clock,PC,dispatch_enable,dest_areg_idx,prf_free_preg_idx,executed_rob_entry,cdb_mis_pred,commit_valid);
190        1/1              reset              = 1'b0;
191        1/1              PC                 = 32'h4;
192        1/1              dispatch_enable    = 1'b1;
193        1/1              execution_finished = 1'b0;
194        1/1              dest_areg_idx      = 1'b1;
195        1/1              prf_free_preg_idx  = 1'b1;
196        1/1              executed_rob_entry = `ROB_LEN'h0;
197        1/1              cdb_mis_pred       = 1'b0;
198                     
199                         // Test 2
200        2/2              @(negedge clock);
201        1/1              print_rob(rob_packets0,rob_head,rob_tail,clock,PC,dispatch_enable,dest_areg_idx,prf_free_preg_idx,executed_rob_entry,cdb_mis_pred,commit_valid);
202        1/1              reset              = 1'b0;
203        1/1              PC                 = 32'h8;
204        1/1              dispatch_enable    = 1'b1;
205        1/1              execution_finished = 1'b1;
206        1/1              dest_areg_idx      = 1'b1;
207        1/1              prf_free_preg_idx  = 1'b1;
208        1/1              executed_rob_entry = `ROB_LEN'h0;
209        1/1              cdb_mis_pred       = 1'b0;
210                     
211                     
212                         // Test 3
213        2/2              @(negedge clock);
214        1/1              print_rob(rob_packets0,rob_head,rob_tail,clock,PC,dispatch_enable,dest_areg_idx,prf_free_preg_idx,executed_rob_entry,cdb_mis_pred,commit_valid);
215        1/1              reset              = 1'b0;
216        1/1              PC                 = 32'hc;
217        1/1              dispatch_enable    = 1'b1;
218        1/1              execution_finished = 1'b1;
219        1/1              dest_areg_idx      = 1'b1;
220        1/1              prf_free_preg_idx  = 1'b1;
221        1/1              executed_rob_entry = `ROB_LEN'h1;
222        1/1              cdb_mis_pred       = 1'b1;
223                     
224                         // Test 4
225        2/2              @(negedge clock);
226        1/1              print_rob(rob_packets0,rob_head,rob_tail,clock,PC,dispatch_enable,dest_areg_idx,prf_free_preg_idx,executed_rob_entry,cdb_mis_pred,commit_valid);
227        1/1              reset              = 1'b0;
228        1/1              PC                 = 32'h10;
229        1/1              dispatch_enable    = 1'b1;
230        1/1              execution_finished = 1'b0;
231        1/1              dest_areg_idx      = 1'b1;
232        1/1              prf_free_preg_idx  = 1'b1;
233        1/1              executed_rob_entry = `ROB_LEN'h1;
234        1/1              cdb_mis_pred       = 1'b0;
235                         
236                         // Test 5
237        2/2              @(negedge clock);
238        1/1              print_rob(rob_packets0,rob_head,rob_tail,clock,PC,dispatch_enable,dest_areg_idx,prf_free_preg_idx,executed_rob_entry,cdb_mis_pred,commit_valid);
239        1/1              reset              = 1'b0;
240        1/1              PC                 = 32'h14;
241        1/1              dispatch_enable    = 1'b1;
242        1/1              execution_finished = 1'b1;
243        1/1              dest_areg_idx      = 1'b1;
244        1/1              prf_free_preg_idx  = 1'b1;
245        1/1              executed_rob_entry = `ROB_LEN'h2;
246        1/1              cdb_mis_pred       = 1'b0;
247                     
248                         // Test 6
249        2/2              @(negedge clock);
250        1/1              print_rob(rob_packets0,rob_head,rob_tail,clock,PC,dispatch_enable,dest_areg_idx,prf_free_preg_idx,executed_rob_entry,cdb_mis_pred,commit_valid);
251        1/1              reset              = 1'b0;
252        1/1              PC                 = 32'h18;
253        1/1              dispatch_enable    = 1'b1;
254        1/1              execution_finished = 1'b1;
255        1/1              dest_areg_idx      = 1'b1;
256        1/1              prf_free_preg_idx  = 1'b1;
257        1/1              executed_rob_entry = `ROB_LEN'h3;
258        1/1              cdb_mis_pred       = 1'b0;
259                     
260        2/2              @(negedge clock);
261        1/1              print_rob(rob_packets0,rob_head,rob_tail,clock,PC,dispatch_enable,dest_areg_idx,prf_free_preg_idx,executed_rob_entry,cdb_mis_pred,commit_valid);
262                         
263        1/1              $display("FINISHING TESTSUITE 1!");
264                     
265        1/1              $display("@@@");
266        1/1              $display("@@@");
267        1/1              $display("@@@");
268                           //Test Suite 2
269        1/1              reset               = 1'b1;
270        1/1              PC                  = 32'h0;
271        1/1              dispatch_enable     = 1'b1;
272        1/1              execution_finished  = 1'b0;
273        1/1              dest_areg_idx       = 1'b1;
274        1/1              prf_free_preg_idx   = 1'b0;
275        1/1              executed_rob_entry  = `ROB_LEN'h0;
276        1/1              cdb_mis_pred        = 1'b0;
277                     
278                     
279        1/1              $display("STARTING TESTSUITE 2!");
280                         // Here, we present a method to test every possible input
281        2/2              @(negedge clock);
282                         
283                         // Test 1
284        2/2              @(negedge clock); 
285        1/1              print_rob(rob_packets0,rob_head,rob_tail,clock,PC,dispatch_enable,dest_areg_idx,prf_free_preg_idx,executed_rob_entry,cdb_mis_pred,commit_valid);
286        1/1              reset              = 1'b0;
287        1/1              PC                 = 32'h4;
288        1/1              dispatch_enable    = 1'b1;
289        1/1              execution_finished = 1'b0;
290        1/1              dest_areg_idx      = 1'b1;
291        1/1              prf_free_preg_idx  = 1'b1;
292        1/1              executed_rob_entry = `ROB_LEN'h0;
293        1/1              cdb_mis_pred       = 1'b0;
294                     
295                         // Test 2
296        2/2              @(negedge clock);
297        1/1              print_rob(rob_packets0,rob_head,rob_tail,clock,PC,dispatch_enable,dest_areg_idx,prf_free_preg_idx,executed_rob_entry,cdb_mis_pred,commit_valid);
298        1/1              reset              = 1'b0;
299        1/1              PC                 = 32'h8;
300        1/1              dispatch_enable    = 1'b1;
301        1/1              execution_finished = 1'b0;
302        1/1              dest_areg_idx      = 1'b1;
303        1/1              prf_free_preg_idx  = 1'b1;
304        1/1              executed_rob_entry = `ROB_LEN'h1;
305        1/1              cdb_mis_pred       = 1'b0;
306                     
307                     
308                         // Test 3
309        2/2              @(negedge clock);
310        1/1              print_rob(rob_packets0,rob_head,rob_tail,clock,PC,dispatch_enable,dest_areg_idx,prf_free_preg_idx,executed_rob_entry,cdb_mis_pred,commit_valid);
311        1/1              reset              = 1'b0;
312        1/1              PC                 = 32'hc;
313        1/1              dispatch_enable    = 1'b1;
314        1/1              execution_finished = 1'b0;
315        1/1              dest_areg_idx      = 1'b1;
316        1/1              prf_free_preg_idx  = 1'b1;
317        1/1              executed_rob_entry = `ROB_LEN'h2;
318        1/1              cdb_mis_pred       = 1'b1;
319                     
320                         // Test 4
321        2/2              @(negedge clock);
322        1/1              print_rob(rob_packets0,rob_head,rob_tail,clock,PC,dispatch_enable,dest_areg_idx,prf_free_preg_idx,executed_rob_entry,cdb_mis_pred,commit_valid);
323        1/1              reset              = 1'b0;
324        1/1              PC                 = 32'h10;
325        1/1              dispatch_enable    = 1'b1;
326        1/1              execution_finished = 1'b0;
327        1/1              dest_areg_idx      = 1'b1;
328        1/1              prf_free_preg_idx  = 1'b1;
329        1/1              executed_rob_entry = `ROB_LEN'h2;
330        1/1              cdb_mis_pred       = 1'b0;
331                         
332                         // Test 5
333        2/2              @(negedge clock);
334        1/1              print_rob(rob_packets0,rob_head,rob_tail,clock,PC,dispatch_enable,dest_areg_idx,prf_free_preg_idx,executed_rob_entry,cdb_mis_pred,commit_valid);
335        1/1              reset              = 1'b0;
336        1/1              PC                 = 32'h14;
337        1/1              dispatch_enable    = 1'b1;
338        1/1              execution_finished = 1'b0;
339        1/1              dest_areg_idx      = 1'b1;
340        1/1              prf_free_preg_idx  = 1'b1;
341        1/1              executed_rob_entry = `ROB_LEN'h3;
342        1/1              cdb_mis_pred       = 1'b0;
343                     
344                             // Test 6
345        2/2              @(negedge clock);
346        1/1              print_rob(rob_packets0,rob_head,rob_tail,clock,PC,dispatch_enable,dest_areg_idx,prf_free_preg_idx,executed_rob_entry,cdb_mis_pred,commit_valid);
347        1/1              reset              = 1'b0;
348        1/1              PC                 = 32'h18;
349        1/1              dispatch_enable    = 1'b1;
350        1/1              execution_finished = 1'b0;
351        1/1              dest_areg_idx      = 1'b1;
352        1/1              prf_free_preg_idx  = 1'b1;
353        1/1              executed_rob_entry = `ROB_LEN'h3;
354        1/1              cdb_mis_pred       = 1'b0;
355                     
356                             // Test 7
357        2/2              @(negedge clock);
358        1/1              print_rob(rob_packets0,rob_head,rob_tail,clock,PC,dispatch_enable,dest_areg_idx,prf_free_preg_idx,executed_rob_entry,cdb_mis_pred,commit_valid);
359        1/1              reset              = 1'b0;
360        1/1              PC                 = 32'h1c;
361        1/1              dispatch_enable    = 1'b1;
362        1/1              execution_finished = 1'b0;
363        1/1              dest_areg_idx      = 1'b1;
364        1/1              prf_free_preg_idx  = 1'b1;
365        1/1              executed_rob_entry = `ROB_LEN'h3;
366        1/1              cdb_mis_pred       = 1'b0;
367                     
368                             // Test 8
369        2/2              @(negedge clock);
370        1/1              print_rob(rob_packets0,rob_head,rob_tail,clock,PC,dispatch_enable,dest_areg_idx,prf_free_preg_idx,executed_rob_entry,cdb_mis_pred,commit_valid);
371        1/1              reset              = 1'b0;
372        1/1              PC                 = 32'h20;
373        1/1              dispatch_enable    = 1'b1;
374        1/1              execution_finished = 1'b0;
375        1/1              dest_areg_idx      = 1'b1;
376        1/1              prf_free_preg_idx  = 1'b1;
377        1/1              executed_rob_entry = `ROB_LEN'h0;
378        1/1              cdb_mis_pred       = 1'b0;
379                         
380                             // Test 9
381        2/2              @(negedge clock);
382        1/1              print_rob(rob_packets0,rob_head,rob_tail,clock,PC,dispatch_enable,dest_areg_idx,prf_free_preg_idx,executed_rob_entry,cdb_mis_pred,commit_valid);
383        1/1              reset              = 1'b0;
384        1/1              PC                 = 32'h24;
385        1/1              dispatch_enable    = 1'b0;
386        1/1              execution_finished = 1'b1;
387        1/1              dest_areg_idx      = 1'b0;
388        1/1              prf_free_preg_idx  = 1'b1;
389        1/1              executed_rob_entry = `ROB_LEN'h0;
390        1/1              cdb_mis_pred       = 1'b0;
391                      
392        2/2              @(negedge clock);
393        1/1              print_rob(rob_packets0,rob_head,rob_tail,clock,PC,dispatch_enable,dest_areg_idx,prf_free_preg_idx,executed_rob_entry,cdb_mis_pred,commit_valid);
394        1/1              reset              = 1'b0;
395        1/1              PC                 = 32'h24;
396        1/1              dispatch_enable    = 1'b0;
397        1/1              execution_finished = 1'b0;
398        1/1              dest_areg_idx      = 1'b0;
399        1/1              prf_free_preg_idx  = 1'b1;
400        1/1              executed_rob_entry = `ROB_LEN'h1;
401        1/1              cdb_mis_pred       = 1'b0;
402                      
403                     
404                         // Random Tests
405        1/1              reset              = 1'b1;
406        1/1              PC                 = 32'h0;
407        1/1              for (j=0; j <= 1000; j++) begin
408        2/2                  @(negedge clock);
409        1/1                  print_rob(rob_packets0,rob_head,rob_tail,clock,PC,dispatch_enable,dest_areg_idx,prf_free_preg_idx,executed_rob_entry,cdb_mis_pred,commit_valid);
410        1/1                  reset       = 1'b0;
411        1/1                  PC          = $urandom;
412        1/1                  if (rob_full && ~commit_valid)
413                                 // cannot dispatch new instruction
414        1/1                      dispatch_enable = 1'b0;
415                             else
416        1/1                      dispatch_enable = $urandom%2;
417                             
418        1/1                  dest_areg_idx = $urandom%32;
419        1/1                  prf_free_preg_idx = $urandom%`PRF_SIZE;
420        1/1                  random_rob_entry = $urandom%`ROB_SIZE;
421        1/1                  if ((random_rob_entry == rob_tail) && (~rob_full))
422        1/1                      executed_rob_entry = (rob_tail == `ROB_LEN'h0) ? `ROB_SIZE-1:rob_tail-1;
423                             else
424        1/1                      executed_rob_entry = random_rob_entry;
425        1/1                  execution_finished = ($urandom%5 !=1) | rob_packets0[executed_rob_entry].executed;
426        1/1                  cdb_mis_pred = ($urandom%100 == 1);
427                         end
428        2/2              @(negedge clock);
429        1/1              print_rob(rob_packets0,rob_head,rob_tail,clock,PC,dispatch_enable,dest_areg_idx,prf_free_preg_idx,executed_rob_entry,cdb_mis_pred,commit_valid);
430                     
431                     
432        1/1              rob_print_close();
433                     // DON'T FORGET TO FINISH THE SIMULATION
434        1/1              $display("\nENDING TESTBENCH: SUCCESS!\n");
435        1/1              $finish;

-------------------------------------------------------------------------------
Toggle Coverage for Module : rob_testbench
                Total Covered Percent 
Totals          18    18      100.00  
Total Bits      158   158     100.00  
Total Bits 0->1 79    79      100.00  
Total Bits 1->0 79    79      100.00  

                                
Signals          18  18  100.00 
Signal Bits      158 158 100.00 
Signal Bits 0->1 79  79  100.00 
Signal Bits 1->0 79  79  100.00 

Signal Details
                              Toggle Toggle 1->0 Toggle 0->1 
clock                         Yes    Yes         Yes         
reset                         Yes    Yes         Yes         
PC[31:0]                      Yes    Yes         Yes         
dispatch_enable               Yes    Yes         Yes         
execution_finished            Yes    Yes         Yes         
dest_areg_idx[4:0]            Yes    Yes         Yes         
prf_free_preg_idx[7:0]        Yes    Yes         Yes         
executed_rob_entry[2:0]       Yes    Yes         Yes         
cdb_mis_pred                  Yes    Yes         Yes         
rob_commit_dest_areg_idx[4:0] Yes    Yes         Yes         
rob_commit_dest_preg_idx[7:0] Yes    Yes         Yes         
rob_tail[2:0]                 Yes    Yes         Yes         
rob_full                      Yes    Yes         Yes         
commit_valid                  Yes    Yes         Yes         
mis_pred_is_head              Yes    Yes         Yes         
rob_head[2:0]                 Yes    Yes         Yes         
rob_empty                     Yes    Yes         Yes         
random_rob_entry[2:0]         Yes    Yes         Yes         


-------------------------------------------------------------------------------
===============================================================================
Module Instance : rob_testbench
===============================================================================

Instance :

SCORE  LINE   TOGGLE 
100.00 100.00 100.00 


Instance's subtree :

SCORE  LINE   TOGGLE 
100.00 100.00 100.00 


Module : 

SCORE  LINE   TOGGLE NAME          
100.00 100.00 100.00 rob_testbench 


Parent : 

none
----------------


Subtrees :

SCORE  LINE   TOGGLE NAME 
100.00 100.00 100.00 rob0 



-------------------------------------------------------------------------------
Since this is the module's only instance, the coverage report is the same as for the module.
===============================================================================
Module : rob
===============================================================================
SCORE  LINE   TOGGLE 
100.00 100.00 100.00 

Source File(s) : 

/afs/umich.edu/user/s/h/shiyuliu/Desktop/group8w20/verilog/rob.sv

Module self-instances :

SCORE  LINE   TOGGLE NAME               
100.00 100.00 100.00 rob_testbench.rob0 



-------------------------------------------------------------------------------
Line Coverage for Module : rob

             Line No.   Total   Covered  Percent
TOTAL                       20       20   100.00
ALWAYS             53       20       20   100.00

52                          always_ff @(posedge clock) begin
53         1/1                  if (reset) begin
54         1/1                      rob_head    <= `SD `ROB_LEN'b0;
55         1/1                      rob_tail    <= `SD `ROB_LEN'b0; 
56         1/1                      rob_counter <= `SD `ROB_LEN'h0;
57                              end
58         1/1                  else if (mis_pred_is_head) begin
59         1/1                      rob_head    <= `SD rob_tail;
60         1/1                      rob_counter <= `SD `ROB_LEN'h0;
61                              end
62                              else begin 
63         1/1                      if (dispatch_enable) begin
64                                      // dispatch
65         1/1                          rob_packets[rob_tail].PC            <= `SD PC;
66         1/1                          rob_packets[rob_tail].executed      <= `SD 1'b0;
67         1/1                          rob_packets[rob_tail].dest_preg_idx <= `SD prf_free_preg_idx;
68         1/1                          rob_packets[rob_tail].dest_areg_idx <= `SD dest_areg_idx;
69         1/1                          rob_packets[rob_tail].rob_mis_pred  <= `SD 1'b0; 
70         1/1                          rob_tail                            <= `SD (rob_tail == `ROB_SIZE-1)? 0: rob_tail + 1;
71                                  end  
                        MISSING_ELSE
72         1/1                      if(commit_valid) begin
73         1/1                          rob_head                            <= `SD (rob_head == `ROB_SIZE-1)? 0: rob_head + 1;
74                                  end 
                        MISSING_ELSE
75         1/1                      if (execution_finished) begin
76                                      //execute
77         1/1                          rob_packets[executed_rob_entry].executed     <= `SD 1'b1;
78         1/1                          rob_packets[executed_rob_entry].rob_mis_pred <= `SD cdb_mis_pred;
79                                  end
                        MISSING_ELSE
80         1/1                      rob_counter <= `SD (dispatch_enable && ~commit_valid) ? rob_counter+1 :

-------------------------------------------------------------------------------
Toggle Coverage for Module : rob
                Total Covered Percent 
Totals          18    18      100.00  
Total Bits      160   160     100.00  
Total Bits 0->1 80    80      100.00  
Total Bits 1->0 80    80      100.00  

                              
Ports          17  17  100.00 
Port Bits      152 152 100.00 
Port Bits 0->1 76  76  100.00 
Port Bits 1->0 76  76  100.00 

                            
Signals          1 1 100.00 
Signal Bits      8 8 100.00 
Signal Bits 0->1 4 4 100.00 
Signal Bits 1->0 4 4 100.00 

Port Details
                              Toggle Toggle 1->0 Toggle 0->1 Direction 
clock                         Yes    Yes         Yes         INPUT     
reset                         Yes    Yes         Yes         INPUT     
PC[31:0]                      Yes    Yes         Yes         INPUT     
dispatch_enable               Yes    Yes         Yes         INPUT     
execution_finished            Yes    Yes         Yes         INPUT     
dest_areg_idx[4:0]            Yes    Yes         Yes         INPUT     
prf_free_preg_idx[7:0]        Yes    Yes         Yes         INPUT     
executed_rob_entry[2:0]       Yes    Yes         Yes         INPUT     
cdb_mis_pred                  Yes    Yes         Yes         INPUT     
rob_commit_dest_areg_idx[4:0] Yes    Yes         Yes         OUTPUT    
rob_commit_dest_preg_idx[7:0] Yes    Yes         Yes         OUTPUT    
rob_tail[2:0]                 Yes    Yes         Yes         OUTPUT    
rob_full                      Yes    Yes         Yes         OUTPUT    
commit_valid                  Yes    Yes         Yes         OUTPUT    
mis_pred_is_head              Yes    Yes         Yes         OUTPUT    
rob_head[2:0]                 Yes    Yes         Yes         OUTPUT    
rob_empty                     Yes    Yes         Yes         OUTPUT    

Signal Details
                 Toggle Toggle 1->0 Toggle 0->1 
rob_counter[3:0] Yes    Yes         Yes         


-------------------------------------------------------------------------------
===============================================================================
Module Instance : rob_testbench.rob0
===============================================================================

Instance :

SCORE  LINE   TOGGLE 
100.00 100.00 100.00 


Instance's subtree :

SCORE  LINE   TOGGLE 
100.00 100.00 100.00 


Module : 

SCORE  LINE   TOGGLE NAME 
100.00 100.00 100.00 rob  


Parent : 

SCORE  LINE   TOGGLE NAME          
100.00 100.00 100.00 rob_testbench 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Since this is the module's only instance, the coverage report is the same as for the module.
